<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kosmo.team.project.dao.StadiumDAO">




	<sql id="stadiumWhere">

		<if
			test="( Stadiumkeyword1 !=null and Stadiumkeyword1.length()>0) or (Stadiumkeyword2!=null and Stadiumkeyword2.length()>0)">
			and (
		</if>
		<if test="Stadiumkeyword1 !=null and Stadiumkeyword1.length()>0">
			(
			upper(st.stadium_name) like upper('%${Stadiumkeyword1}%')
			)
		</if>
		<if
			test="( Stadiumkeyword1 !=null and Stadiumkeyword1.length()>0) and ( Stadiumkeyword2 !=null and Stadiumkeyword2.length()>0)">
			${orand}
		</if>
		<if test="Stadiumkeyword2!=null and Stadiumkeyword2	.length()>0">
			(
			upper(st.stadium_name) like upper('%${Stadiumkeyword2}%')
			)
		</if>
		<if test="sido !=null and sido>0 ">
			and
			(
			st.sido_name = ${sido}
			)

			<if test="sigungu !=null and sigungu>0 ">
				and
				(
				st.sigungu_name = ${sigungu}
				)


			</if>


		</if>


		<if
			test="( Stadiumkeyword1 !=null and Stadiumkeyword1.length()>0) or (Stadiumkeyword2!=null and Stadiumkeyword2.length()>0)">
			)
		</if>


	</sql>
























	<select id="getStadiumList"
		resultType="kosmo.team.project.dto.StadiumDTO"
		parameterType="kosmo.team.project.dto.StadiumDTO">
		select * from (
		select rownum RNUM, zxcvb.* from (
		select
		st.stadium_no
		AS "stadium_no"
		,st.stadium_name AS "stadium_name"
		,s.name
		AS
		"sido_name"
		,si.name as "sigungu_name"
		,st.detailed_address as
		"detail_address"
		,to_char(st.reg_date, 'YYYY-MM-DD') AS "reg_date"
		,st.content as
		"content"
		,st.stadium_status as "stadium_status"

		FROM
		stadium st
		LEFT
		JOIN
		sido s ON st.sido_name = s.sido_id
		LEFT JOIN sigungu si ON
		st.sigungu_name = si.sigungu_id
		where st.stadium_status != '이용불가'
		<include refid="stadiumWhere" />

        <![CDATA[ ) zxcvb) where RNUM >= #{begin_rowNo} and RNUM <= #{end_rowNo} ]]>
	</select>

	<select id="getStadiumListCnt" resultType="int">
		select
		count(*)
		FROM
		stadium st
		LEFT
		JOIN
		sido s ON st.sido_name = s.sido_id
		LEFT JOIN sigungu si ON
		st.sigungu_name = si.sigungu_id
		where
		st.stadium_status != '이용불가'

		<include refid="stadiumWhere" />
	</select>


	<select id="getStadiumListAllCnt" resultType="int">
		select
		count(*)
		FROM
		stadium st
		LEFT
		JOIN
		sido s ON st.sido_name = s.sido_id
		LEFT JOIN sigungu si ON
		st.sigungu_name = si.sigungu_id
		where
		st.stadium_status != '이용불가'
		<include refid="stadiumWhere" />

	</select>



	<select id="getStadium" parameterType="int"
		resultType="kosmo.team.project.dto.StadiumDTO">

		select
		st.stadium_no AS "stadium_no"
		,st.stadium_name AS
		"stadium_name"
		,s.name AS "sido_name"
		,si.name as "sigungu_name"
		,st.detailed_address
		as
		"detail_address"
		,to_char(st.reg_date,
		'YYYY-MM-DD') AS "reg_date"
		,st.content as "content"
		,st.stadium_status
		as "stadium_status"

		FROM
		stadium st
		LEFT JOIN sido s ON st.sido_name =
		s.sido_id
		LEFT JOIN
		sigungu si ON st.sigungu_name = si.sigungu_id

		where
		stadium_no=#{stadium_no}
	</select>

	<!-- 시간테이블 -->

	<select id="getTime" parameterType="int"
		resultType="kosmo.team.project.dto.TimeDTO">

		select
		time_no as "time_no"
		,time_range as "time_range"
		from
		time_table
	</select>


	<insert id="insertStadiumRent"
		parameterType="kosmo.team.project.dto.RentStadiumDTO">
		insert into booking(

		booking_no
		,stadium_no
		,booking_date
		,time_slot
		,m_no
		)
		values ( (select
		nvl(max(booking_no),0)+1
		from booking)
		,#{stadium_no}
		,#{date}
		,#{time_slot}
		,#{m_no}
		)
	</insert>


	<select id="getRentTimeCnt"
		parameterType="kosmo.team.project.dto.RentStadiumDTO" resultType="int">
		select count(*) from booking
		where stadium_no = #{stadium_no} and
		time_slot = #{time_slot} and booking_date = #{date}
	</select>






	<!-- <select id="getRentTimeSlotCnt" parameterType="kosmo.team.project.dto.RentStadiumDTO" 
		resultType="int"> select count(time_slot) from booking where stadium_no = 
		#{stadium_no} group by booking_date having count(time_slot) = 11 </select> -->


	<select id="getFullRent" parameterType="int" resultType="String">
		select
		to_char(booking_date, 'yyyy-mm-dd') as booking_date
		from booking
		where
		stadium_no = #{stadium_no}
		group by booking_date
		having count(time_slot)
		= 11
	</select>

	<select id="getM_no"
		parameterType="kosmo.team.project.dto.RentStadiumDTO" resultType="int">
		select count(*)
		from booking
		where m_no = #{m_no}
		and booking_date >=
		CURRENT_DATE
	</select>





	<select id="getMyStadiumList"
		resultType="kosmo.team.project.dto.myRentStadiumDTO"
		parameterType="kosmo.team.project.dto.myRentStadiumDTO">

		select
		b.m_no as "m_no",
		s.stadium_no as "stadium_no",
		s.stadium_name as "stadium_name",
		sid.name as "sido_name",
		sig.name as "sigungu_name",
		s.detailed_address as "detail_address"
		from
		booking b
		join stadium s on b.stadium_no = s.stadium_no
		join sido sid on s.sido_name = sid.sido_id
		join sigungu sig on s.sigungu_name = sig.sigungu_id
		join member m on b.m_no = #{m_no}

		where
		b.m_no = #{m_no}
		group by
		b.m_no,
		s.stadium_no,
		s.stadium_name,
		sid.name,
		sig.name,
		s.detailed_address


	</select>

	<select id="getDate"
		resultType="kosmo.team.project.dto.MyRentStaidumTimeDTO"
		parameterType="kosmo.team.project.dto.MyRentStaidumTimeDTO">

			select
			    b.m_no AS "m_no",
			    b.stadium_no AS "stadium_no",
			    to_char(b.booking_date, 'yyyy-mm-dd (DY)', 'NLS_DATE_LANGUAGE=KOREAN') AS "booking_date"

			from
			    booking b
			where
			    b.m_no = #{m_no} AND
			    b.stadium_no = #{stadium_no}
			group by
			    b.m_no,
			    b.stadium_no,
			    to_char(b.booking_date, 'yyyy-mm-dd (DY)', 'NLS_DATE_LANGUAGE=KOREAN')


	</select>
	
	
	<select id="getTimeRanges"
    resultType="kosmo.team.project.dto.MyRentStaidumTimeDTO"
    parameterType="kosmo.team.project.dto.MyRentStaidumTimeDTO">

    select
        b.m_no as "m_no",
        b.stadium_no as "stadium_no",
        b.time_slot as "time_slot",
        t.time_range as "time_range"
    from
        booking b
        join time_table t on b.time_slot = t.time_no
    where
        b.m_no = #{m_no} 
        and b.stadium_no = #{stadium_no} 
        and b.booking_date = to_date(#{booking_date}, 'yyyy-mm-dd')

</select>




</mapper>