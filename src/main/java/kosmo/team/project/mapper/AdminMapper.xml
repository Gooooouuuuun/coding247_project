<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kosmo.team.project.dao.AdminDAO">



	<sql id="boardWhere">
		<if
			test="(keyword1 != null and keyword1.length() > 0) or (keyword2 != null and keyword2.length() > 0)">
			and (
		</if>
		<if test="keyword1 != null and keyword1.length() > 0">
			(
			<if test="searchType1 == 'name'">
				upper(name) like upper('%${keyword1}%')
			</if>
			<if test="searchType1 == 'mid'">
				upper(mid) like upper('%${keyword1}%')
			</if>
			<if test="searchType1 == 'nickname'">
				upper(nickname) like upper('%${keyword1}%')
			</if>
			<if test="searchType1 == 'phone'">
				upper(phone) like upper('%${keyword1}%')
			</if>
			<if test="searchType1 == 'email'">
				upper(email) like upper('%${keyword1}%')
			</if>
			<if test="searchType1 == 'all'">
				upper(name) like upper('%${keyword1}%')
				or
				upper(mid) like
				upper('%${keyword1}%')
				or
				upper(nickname) like upper('%${keyword1}%')
				or
				upper(email) like upper('%${keyword1}%')
				or
				upper(phone) like
				upper('%${keyword1}%')
			</if>
			)
		</if>
		<if test="keyword2 != null and keyword2.length() > 0">
			${orand}
			(
			<if test="searchType2 == 'name'">
				upper(name) like upper('%${keyword2}%')
			</if>
			<if test="searchType2 == 'mid'">
				upper(mid) like upper('%${keyword2}%')
			</if>
			<if test="searchType2 == 'nickname'">
				upper(nickname) like upper('%${keyword2}%')
			</if>
			<if test="searchType2 == 'phone'">
				upper(phone) like upper('%${keyword2}%')
			</if>
			<if test="searchType2 == 'email'">
				upper(email) like upper('%${keyword2}%')
			</if>
			<if test="searchType2 == 'all'">
				upper(name) like upper('%${keyword2}%')
				or
				upper(mid) like
				upper('%${keyword2}%')
				or
				upper(nickname) like upper('%${keyword2}%')
				or
				upper(email) like upper('%${keyword2}%')
				or
				upper(phone) like
				upper('%${keyword2}%')
			</if>
			)
		</if>
		<if test="gender != null ">
			and gender =
			<foreach item="temp"  collection="gender"
				open=" ( " separator="," close=" ) ">
				#{temp}
			</foreach>
		</if>


		<if test="(minDate != null and minDate.length() > 0)">
			and to_char(reg_date, 'YYYY-MM-DD') &gt;= #{minDate}
			<if test="(maxDate != null and maxDate.length() > 0)">
				and to_char(reg_date, 'YYYY-MM-DD') &lt;= #{maxDate}
			</if>
		</if>
		<if test="(maxDate != null and maxDate.length() > 0)">
			and to_char(reg_date, 'YYYY-MM-DD') &lt;= #{maxDate}
			<if test="(minDate != null and minDate.length() > 0)">
				and to_char(reg_date, 'YYYY-MM-DD') &gt;= #{minDate}
			</if>
		</if>
		<if
			test="(keyword1 != null and keyword1.length() > 0) or (keyword2 != null and keyword2.length() > 0)">
			)
		</if>
	</sql>
























	<!-- 모든 회원 목록을 가져오는 쿼리 정의 -->
	<select id="getMemberList"
		resultType="kosmo.team.project.dto.MemberDTO"
		parameterType="kosmo.team.project.dto.AdminSearchDTO">
		select * from ( select rownum RNUM, zxcvb.* from (

		select
		m_no AS
		"m_no",
		mid AS "mid",
		name AS "name",
		nickname as "nickname",
		email as
		"email",
		birthdate as "birthday",
		phone as "phone",
		gender as "gender",
		detail_address as "detail_address",

		to_char(reg_date, 'YYYY-MM-DD') AS
		"reg_date"
		FROM
		member
		where m_no != 1
		<include refid="boardWhere" />
		<if test="sort==null or sort.length()==0">
			order by

			m_no asc
		</if>

		<if test="sort!=null and sort.length()>0">
			order by

			${sort}
		</if>
		
		
    	
    <![CDATA[
    ) zxcvb) where  RNUM  >= #{begin_rowNo}  and RNUM <= #{end_rowNo}
    ]]>
	</select>



	<select id="getMemberListCnt" resultType="int">
		select
		count(*)
		from
		member
		where 1=1
		<include refid="boardWhere" />
	</select>



	<!-- 게시판 모든 행의 개수 구하는 select 문 내포하는 select 태그 선언하기 -->
	<select id="getMemberListAllCnt" resultType="int">
		select count(*)
		from
		member
		where 1=1
		<include refid="boardWhere" />
	</select>





	<select id="getMember" parameterType="int"
		resultType="kosmo.team.project.dto.MemberDTO">

		select
		m_no AS
		"m_no",
		mid AS "mid",
		name AS "name",
		nickname as
		"nickname",
		email as "email",
		to_char(birthdate,
		'YYYY-MM-DD') AS
		"birthday",
		phone as "phone",
		gender as "gender",
		detail_address as
		"detail_address",

		to_char(reg_date,
		'YYYY-MM-DD') AS "reg_date"
		FROM
		member
		where
		m_no=#{m_no}

	</select>

	<update id="updateMember"
		parameterType="kosmo.team.project.dto.MemberDTO">

		update member set

		name = #{name}
		,mid = #{mid}
		,nickname=#{nickname}
		,
		email = #{email}
		,birthdate = #{birthday}

		,phone = #{phone}

		,gender =
		#{gender}
		,detail_address =
		#{detail_address}

		where m_no = #{m_no}

		<!-- ========================================== #{subject} 뜻 ========================================== 
			=============== {subject} 의미 =============== SQL 문에 참여할 BoardDTO 객체 안의 멤버변수 
			subject 안의 데이터를 표현하기 즉 제목을 표현하기 =============== # 의미 =============== 표현할 
			데이터가 문자라면 표현할 때 앞뒤에 ' 를 붙인다. 숫자라면 표현할 때 앞뒤에 ' 를 붙이지 않는다. -->
	</update>

	<select id="getMemberCnt" parameterType="int" resultType="int">
		select
		count(*) from member where m_no=#{m_no}
	</select>



	<delete id="deleteMember"
		parameterType="kosmo.team.project.dto.MemberDTO">

		delete from
		member
		where
		m_no=#{m_no}
		<!-- ========================================== #{b_no} 뜻 ========================================== 
			=============== {b_no} 의미 =============== SQL 문에 참여할 BoardDTO 객체 안의 멤버변수 
			b_no 안의 데이터를 표현하기 즉 게시판 번호를 표현하기 =============== # 의미 =============== 표현할 
			데이터가 문자라면 표현할 때 앞뒤에 ' 를 붙인다. 숫자라면 표현할 때 앞뒤에 ' 를 붙이지 않는다. -->
	</delete>









	<select id="getPlayerRecord" parameterType="int"
		resultType="kosmo.team.project.dto.PlayerRecordDTO">

		select
		player AS "player",
		games_played AS "games_played",
		wins as "wins",
		draws as "draws",
		losses as "losses",
		goals_for as
		"goals_for",
		goals_assist as "goals_assist"

		FROM
		player_record
		where
		player=#{player}

	</select>


	<select id="getPlayerRecordCnt" parameterType="int"
		resultType="int">
		select
		count(*) from player_record where player=#{player}
	</select>



	<update id="updatePlayerRecord"
		parameterType="kosmo.team.project.dto.PlayerRecordDTO">

		update player_record set

		games_played = #{games_played}
		,wins=#{wins}
		,
		draws = #{draws}
		,losses = #{losses}
		,goals_for =
		#{goals_for}
		,goals_assist =
		#{goals_assist}

		where player = #{player}

	</update>



	<delete id="deletePlayerRecord"
		parameterType="kosmo.team.project.dto.PlayerRecordDTO">

		delete from
		player_record
		where
		player=#{player}

	</delete>


	<!-- 공지사항 -->

	<select id="getNoticeBoardList"
		resultType="kosmo.team.project.dto.CommunityDTO"
		parameterType="kosmo.team.project.dto.AdminSearchDTO">
		select * from ( select rownum RNUM, zxcvb.* from (

		select
		b_no AS
		"b_no",
		subject AS "subject",
		writer AS "writer",
		content AS "content",
		to_char(reg_date, 'YYYY-MM-DD') AS "reg_date",
		readcount AS "readcount"
		FROM
		noticeboard

		<if test="sort==null or sort.length()==0">
			order by

			b_no desc
		</if>

		<if test="sort!=null and sort.length()>0">
			order by

			${sort}
		</if>
		    	
		    <![CDATA[
			) zxcvb) where  RNUM  >= #{begin_rowNo}  and RNUM <= #{end_rowNo}
		]]>
	</select>



	<select id="getNoticeBoardListCnt" resultType="int">
		select
		count(*)
		from
		noticeboard
	</select>


	<!-- 게시판 모든 행의 개수 구하는 select 문 내포하는 select 태그 선언하기 -->
	<select id="getNoticeBoardAllCnt" resultType="int">
		select count(*)
		from
		noticeboard
	</select>



	<select id="getNoticeBoard" parameterType="int"
		resultType="kosmo.team.project.dto.CommunityDTO">

		select
		b_no "b_no"
		,subject "subject"
		,writer "writer"
		,to_char(reg_date,
		'YYYY-MM-DD') AS "reg_date"
		,readcount "readcount"
		,content "content"


		from noticeboard

		where
		b_no=#{b_no}
		<!-- ========================================== #{b_no} 뜻 ========================================== 
			select SQL 문에 참여할 외부 데이터중에 int 또는 double 또는 String 을 표현하기. 참여하는 외부 데이터가 int 
			또는 double 또는 String 이라면 b_no 라는 영문 대신에 영문 아무거나 써도 된다. 외부 데이터가 문자라면 표현할 때 
			앞뒤에 ' 가 붙는다. 숫자라면 표현할 때 앞뒤에 ' 없이 그냥 표현된다. -->


	</select>

	<insert id="insertNoticeBoard"
		parameterType="kosmo.team.project.dto.CommunityDTO">
		insert into noticeboard(
		b_no
		,subject
		,writer
		,readcount
		,content
		)
		values ( (select nvl(max(b_no),0)+1
		from noticeboard)
		,#{subject}
		,#{writer}
		,0
		,#{content}
		)
	</insert>




	<update id="updateNoticeBoardReadCount" parameterType="int">

		update
		noticeboard
		set
		readcount = readcount +1 where b_no = #{b_no}



	</update>


	<update id="updateNoticeBoard"
		parameterType="kosmo.team.project.dto.CommunityDTO">

		update noticeboard set

		subject = #{subject}
		,writer = #{writer}
		,content
		=
		#{content}

		where b_no = #{b_no}

		<!-- ========================================== #{subject} 뜻 ========================================== 
			=============== {subject} 의미 =============== SQL 문에 참여할 BoardDTO 객체 안의 멤버변수 
			subject 안의 데이터를 표현하기 즉 제목을 표현하기 =============== # 의미 =============== 표현할 
			데이터가 문자라면 표현할 때 앞뒤에 ' 를 붙인다. 숫자라면 표현할 때 앞뒤에 ' 를 붙이지 않는다. -->
	</update>

	<select id="getNoticeBoardCnt" parameterType="int"
		resultType="int">
		select
		count(*) from noticeboard where b_no=#{b_no}
	</select>


	<delete id="deleteNoticeBoard"
		parameterType="kosmo.team.project.dto.CommunityDTO">
		delete from
		noticeboard
		where
		b_no=#{b_no}
		<!-- ========================================== #{b_no} 뜻 ========================================== 
			=============== {b_no} 의미 =============== SQL 문에 참여할 BoardDTO 객체 안의 멤버변수 
			b_no 안의 데이터를 표현하기 즉 게시판 번호를 표현하기 =============== # 의미 =============== 표현할 
			데이터가 문자라면 표현할 때 앞뒤에 ' 를 붙인다. 숫자라면 표현할 때 앞뒤에 ' 를 붙이지 않는다. -->
	</delete>

</mapper>
