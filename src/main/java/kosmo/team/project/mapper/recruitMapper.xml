<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "kosmo.team.project.dao.RecruitDAO">

   <sql id="boardWhere">
      <if test="sort == 'all'">
       and
          2=2
       </if>   
       <if test="sort == 'team'">
       and
          r.team_mem = '팀'
       </if>
       <if test="sort == 'mem'">
       and
          r.team_mem = '팀원'
       </if>
       <if test="(keyword1 != null and keyword1.length() > 0)">
      and (
      </if>
         <if test="keyword1 != null and keyword1.length() > 0">
            (
            <if test="searchType1 == 'writer'">
               upper(writer) like upper('%${keyword1}%')
            </if>
            <if test="searchType1 == 'title'">
               upper(title) like upper('%${keyword1}%')
            </if>
            <if test="searchType1== 'content'">
               upper(content) like upper('%${keyword1}%')
            </if>
            <if test="searchType1 == 'all'">
               upper(writer) like upper('%${keyword1}%')
               or
               upper(title) like upper('%${keyword1}%')
               or
               upper(content) like upper('%${keyword1}%')
            </if>
            )
         </if>
      <if test="(keyword1 != null and keyword1.length() > 0)">
         )
      </if>
      <if test="sido != null and sido>0">
      and
      (
         r.sido = ${sido}
      )
         <if test="sigungu !=null and sigungu>0 ">
         and
         (
            r.sigungu = ${sigungu}
         )
         </if>
      </if>
      
      <!-- 
      	<if test="day!=null and day.size()>0">
			<foreach collection="day" item="tmp" open=" and (  " close="  ) " separator=" or ">
				day = #{tmp}
			</foreach>
		</if>
		
		<if test="time!=null and time.size()>0">
			<foreach collection="time" item="tmp" open=" and (  " close="  ) " separator=" or ">
				time = #{tmp}
			</foreach>
		</if>
		
		
		 <if test="day != null and day.size()>0">
		    and (
		    <if test="day.size() == 1 and day[0] == 0">
		        d.day IN (1, 2, 3, 4, 5, 6, 7)
		    </if>
		    <if test="day.size() != 1 or day[0] != 0">
		        <foreach collection="day" item="tmp" separator=" OR ">
		            d.day = #{tmp}
		        </foreach>
		    </if>
		    )
		</if>
		
		
		<if test="pos != null and pos.size()>0">
		    and (
		    <if test="pos.size() == 1 and pos[0] == 'allpos'">
		        r.pos IN ('ST','CM','CB','GK')
		    </if>
		    <if test="pos.size() != 1 and pos[0] != 'allpos'">
		        <foreach collection="pos" item="tmp" separator=" OR ">
		            r.pos = #{tmp}
		        </foreach>
		    </if>
		    )
		</if>
       -->
       
      <if test="day != null and day.size()>0">
		    and (
		    <if test="day.size() == 1 and day[0] == 0">
		        d.day IN (1, 2, 3, 4, 5, 6, 7)
		    </if>
		    <if test="day.size() != 0 and day[0] != 0">
		        <foreach collection="day" item="tmp" separator=" OR ">
		            d.day = #{tmp}
		        </foreach>
		    </if>
		    )
		</if>
		
		<if test="time != null and time.size()>0">
		    and (
		    <if test="time.size() == 1 and time[0] == 'alltime'">
		        t.time IN ('새벽','오전','오후','야간')
		    </if>
		    <if test="time.size() != 0 and time[0] != 'alltime'">
		        <foreach collection="time" item="tmp" separator=" OR ">
		            t.time = #{tmp}
		        </foreach>
		    </if>
		    )
		</if>
		
		<if test="pos != null and pos.size()>0">
		    and (
		    <if test="pos.size() == 1 and pos[0] == 'allpos'">
		        r.pos IN ('ST','CM','CB','GK')
		    </if>
		    <if test="pos.size() != 0 and pos[0] != 'allpos'">
		        <foreach collection="pos" item="tmp" separator=" OR ">
		            r.pos = #{tmp}
		        </foreach>
		    </if>
		    )
		</if>
   </sql>
   




   <select id="getRecruit_TeamMemList" resultType="kosmo.team.project.dto.RecruitTeamMemDTO" parameterType="kosmo.team.project.dto.RecruitSearchDTO">
          select * from ( select rownum RNUM, zxcvb.* from( 
             select 
                 distinct(r.b_no) 
                 ,r.title
                 ,r.writer 
                 ,r.content 
                 ,r.readcount 
                 ,r.team_mem
                 ,to_char(r.reg_date, 'YYYY-MM-DD') as "reg_date"
             from 
                 recruit_TeamMemBoard r LEFT JOIN teammemboard_day d ON r.b_no = d.b_no 
                                   		LEFT JOIN teammemboard_time t ON r.b_no = t.b_no 
             where
                1=1
             <include refid="boardWhere"/>
                
             
             <if test="sort_date==null or sort_date.length()==0">
            order by
               r.b_no desc
            </if>
            <if test="sort_date!=null and sort_date.length() > 0">
               order by
                  ${sort_date}
            </if>
             
             
         <![CDATA[
         ) zxcvb) where  RNUM  >= #{begin_rowNo}  and RNUM <= #{end_rowNo}
      ]]>
      
   </select>
   
   
   
   <select id="getBoardListCnt" parameterType="kosmo.team.project.dto.RecruitSearchDTO"   resultType="int">
      select
          count(distinct r.b_no)
      from 
         recruit_TeamMemBoard r  LEFT JOIN (SELECT DISTINCT b_no, day FROM teammemboard_day) d ON r.b_no = d.b_no  
         						 LEFT JOIN (SELECT DISTINCT b_no, time FROM teammemboard_time) t ON r.b_no = t.b_no
       where
          1=1
       <include refid="boardWhere"/>
      
   </select>
   
   
   
   
   <select id="getRecruit_HiredBoardList" resultType="kosmo.team.project.dto.RecruitHiredDTO">
          select 
              recruitment_no 
              ,title 
              ,writer 
              ,content 
              ,readcount 
              ,to_char(reg_date, 'YYYY-MM-DD') as "reg_date"
          from 
              Hired_recruitment
   </select>
   
   <select id="getRecruit_LessonBoardList" resultType="kosmo.team.project.dto.RecruitLessonDTO">
          select 
              recruitment_no 
              ,title 
              ,writer 
              ,content 
              ,readcount 
              ,to_char(reg_date, 'YYYY-MM-DD') as "reg_date"
              ,money
          from 
              Lesson_recruitment
   </select>      
   
   
   <select id="getRecruit_TeamMemDetail_ex" resultType="kosmo.team.project.dto.RecruitTeamMemDTO" parameterType="int">
          select 
              b_no 
              ,title 
              ,writer 
              ,content 
              ,readcount 
              ,to_char(reg_date, 'YYYY-MM-DD') as "reg_date"
              ,team_mem
          from 
              recruit_teammemboard
          where
             b_no = #{b_no}
   </select>   
   
   
   <select id="getRecruit_TeamMemDetail" resultType="kosmo.team.project.dto.RecruitTeamMemDTO" parameterType="int">
          select 
              t.b_no 
              ,t.title 
              ,t.writer 
              ,t.content 
              ,t.readcount 
              ,to_char(t.reg_date, 'YYYY-MM-DD') as "reg_date"
              ,t.team_mem
              ,s.name    as "sido_c"
              ,si.name    as "sigungu_c"
              ,t.pos
          from 
              recruit_teammemboard t LEFT JOIN sido s ON t.sido = s.sido_id
                                 LEFT JOIN sigungu si ON t.sigungu = si.sigungu_id
          where
             b_no = #{b_no}
         
         
   </select>
   
   <select id="getRecruit_HiredDetail" resultType="kosmo.team.project.dto.RecruitHiredDTO" parameterType="int">
          select 
              recruitment_no 
              ,title 
              ,writer 
              ,content 
              ,readcount 
              ,to_char(reg_date, 'YYYY-MM-DD') as "reg_date"
          from 
              hired_recruitment
          where
             recruitment_no = #{recruitment_no}
   </select>   
   
   
   <select id="getRecruit_LessonDetail" resultType="kosmo.team.project.dto.RecruitLessonDTO" parameterType="int">
          select 
              recruitment_no 
              ,title 
              ,writer 
              ,content 
              ,readcount 
              ,to_char(reg_date, 'YYYY-MM-DD') as "reg_date"
          from 
              lesson_recruitment
          where
             recruitment_no = #{recruitment_no}
   </select>  
   
   
   <insert id="regTeamMemRecruit" parameterType="kosmo.team.project.dto.RecruitTeamMemDTO" >
   insert into recruit_teammemboard (b_no, title, writer, content, team_mem,sido,sigungu,pos)
   values(
      (select nvl(max(b_no),0)+1 from recruit_teammemboard)
      ,#{title}
      ,#{writer}
      ,#{content}
      ,#{team_mem}
      ,#{sido}
      ,#{sigungu}
      ,#{pos}
   )
   </insert>
   
   
    <!-- day 테이블에 날짜 삽입 쿼리 -->
   <insert id="insertDay" parameterType="kosmo.team.project.dto.RecruitTeamMemDTO">
         insert into teammemboard_day
      <foreach collection="day" item="day"  open= " ( "  close = " ) "   separator=" union " >
         select  (select max(b_no)from recruit_teammemboard), #{day} from dual
      </foreach>
   </insert> 
   
   <!-- time 테이블에 시간 삽입 쿼리 -->
   <insert id="insertTime" parameterType="kosmo.team.project.dto.RecruitTeamMemDTO">
         insert into teammemboard_time
      <foreach collection="time" item="time"  open= " ( "  close = " ) "   separator=" union " >
         select  (select max(b_no)from recruit_teammemboard), #{time} from dual
      </foreach>
   </insert> 
   
   
   <update id="updateTeamMemReadCnt" parameterType="int">
      update 
         recruit_teammemboard
      set
         readcount=readcount+1
      where
         b_no=#{b_no}
   </update>


   <select id="getRecruit_day" parameterType="int" resultType="String">    
      select
         dof.day_name as "day"
      from
          recruit_teammemboard r LEFT JOIN teammemboard_day d ON r.b_no = d.b_no 
                                 LEFT JOIN day_of_week dof ON d.day = dof.day_no             
                                 where r.b_no = #{b_no} 
   </select>
   
   <select id="getRecruit_time" parameterType="int" resultType="String">    
      select
         t.time as "time"
      from
          recruit_teammemboard r LEFT JOIN teammemboard_time t ON r.b_no = t.b_no 
                            where r.b_no = #{b_no}       
   </select>
   
   
   
</mapper>