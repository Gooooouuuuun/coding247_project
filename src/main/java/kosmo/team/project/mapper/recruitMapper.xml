<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "kosmo.team.project.dao.RecruitDAO">

	<select id="getRecruit_TeamMemList" resultType="kosmo.team.project.dto.RecruitTeamMemDTO" parameterType="kosmo.team.project.dto.RecruitSearchDTO">
			 select * from ( select rownum RNUM, zxcvb.* from( 
			    select 
			        b_no 
			        ,title
			        ,writer 
			        ,content 
			        ,readcount 
			        ,team_mem
			        ,to_char(reg_date, 'YYYY-MM-DD') as "reg_date"
			    from 
			        recruit_TeamMemBoard
			    where
			    	1=1
			    <if test="sort == 'all'">
			    and
			    	2=2
			    </if>	
			    <if test="sort == 'team'">
			    and
			    	team_mem = '팀'
			    </if>
			    <if test="sort == 'mem'">
			    and
			    	team_mem = '팀원'
			    </if>
			    <if
					test="(keyword1 != null and keyword1.length() > 0)">
					and (
				</if>
				<if test="keyword1 != null and keyword1.length() > 0">
					(
					<if test="searchType1 == 'writer'">
						upper(writer) like upper('%${keyword1}%')
					</if>
					<if test="searchType1 == 'title'">
						upper(title) like upper('%${keyword1}%')
					</if>
					<if test="searchType1== 'content'">
						upper(content) like upper('%${keyword1}%')
					</if>
					<if test="searchType1 == 'all'">
						upper(writer) like upper('%${keyword1}%')
						or
						upper(title) like upper('%${keyword1}%')
						or
						upper(content) like upper('%${keyword1}%')
					</if>
					)
				</if>
				<if
					test="(keyword1 != null and keyword1.length() > 0)">
					)
				</if>
			<![CDATA[
			) zxcvb) where  RNUM  >= #{begin_rowNo}  and RNUM <= #{end_rowNo}
		]]>
	</select>
	
	
	
	<select id="getBoardListCnt" parameterType="kosmo.team.project.dto.RecruitSearchDTO"   resultType="int">
		select
			count(*)
		from
			recruit_TeamMemBoard 
	 	where
	    	1=1
	    <if test="sort == 'all'">
	    and
	    	2=2
	    </if>	
	    <if test="sort == 'team'">
	    and
	    	team_mem = '팀'
	    </if>
	    <if test="sort == 'mem'">
	    and
	    	team_mem = '팀원'
	    </if>
	    <if
			test="(keyword1 != null and keyword1.length() > 0)">
			and (
		</if>
		<if test="keyword1 != null and keyword1.length() > 0">
			(
			<if test="searchType1 == 'writer'">
				upper(writer) like upper('%${keyword1}%')
			</if>
			<if test="searchType1 == 'title'">
				upper(title) like upper('%${keyword1}%')
			</if>
			<if test="searchType1== 'content'">
				upper(content) like upper('%${keyword1}%')
			</if>
			<if test="searchType1 == 'all'">
				upper(writer) like upper('%${keyword1}%')
				or
				upper(title) like upper('%${keyword1}%')
				or
				upper(content) like upper('%${keyword1}%')
			</if>
			)
		</if>
		<if
			test="(keyword1 != null and keyword1.length() > 0)">
			)
		</if>
		
	    
	
	</select>
	
	
	
	
	<select id="getRecruit_HiredBoardList" resultType="kosmo.team.project.dto.RecruitHiredDTO">
		    select 
		        recruitment_no 
		        ,title 
		        ,writer 
		        ,content 
		        ,readcount 
		        ,to_char(reg_date, 'YYYY-MM-DD') as "reg_date"
		    from 
		        Hired_recruitment
	</select>
	
	<select id="getRecruit_LessonBoardList" resultType="kosmo.team.project.dto.RecruitLessonDTO">
		    select 
		        recruitment_no 
		        ,title 
		        ,writer 
		        ,content 
		        ,readcount 
		        ,to_char(reg_date, 'YYYY-MM-DD') as "reg_date"
		        ,money
		    from 
		        Lesson_recruitment
	</select>		
	
	
	<select id="getRecruit_TeamMemDetail" resultType="kosmo.team.project.dto.RecruitTeamMemDTO" parameterType="int">
		    select 
		        b_no 
		        ,title 
		        ,writer 
		        ,content 
		        ,readcount 
		        ,to_char(reg_date, 'YYYY-MM-DD') as "reg_date"
		        ,team_mem
		    from 
		        recruit_teammemboard
		    where
		    	b_no = #{b_no}
	</select>	
	
	<select id="getRecruit_HiredDetail" resultType="kosmo.team.project.dto.RecruitHiredDTO" parameterType="int">
		    select 
		        recruitment_no 
		        ,title 
		        ,writer 
		        ,content 
		        ,readcount 
		        ,to_char(reg_date, 'YYYY-MM-DD') as "reg_date"
		    from 
		        hired_recruitment
		    where
		    	recruitment_no = #{recruitment_no}
	</select>	
	
	
	<select id="getRecruit_LessonDetail" resultType="kosmo.team.project.dto.RecruitLessonDTO" parameterType="int">
		    select 
		        recruitment_no 
		        ,title 
		        ,writer 
		        ,content 
		        ,readcount 
		        ,to_char(reg_date, 'YYYY-MM-DD') as "reg_date"
		    from 
		        lesson_recruitment
		    where
		    	recruitment_no = #{recruitment_no}
	</select>  
	
	
	<insert id="regTeamMemRecruit" parameterType="kosmo.team.project.dto.RecruitTeamMemDTO" >
	insert into recruit_teammemboard (b_no, title, writer, content, team_mem)
	values(
		(select nvl(max(b_no),0)+1 from recruit_teammemboard)
		,#{title}
		,#{writer}
		,#{content}
		,#{team_mem}
		
	)
	
	</insert>
	
	<update id="updateTeamMemReadCnt" parameterType="int">
		update 
			recruit_teammemboard
		set
			readcount=readcount+1
		where
			b_no=#{b_no}
	</update>
	

	
	
</mapper>